db-videogames-query

### Query

#### SELECT

1.SELECT *
FROM SOFTWARE_HOUSES SH 
WHERE SH.COUNTRY LIKE  'united states';

2.SELECT *
FROM PLAYERS P 
WHERE P.CITY LIKE 'Rogahnland';

3.SELECT *
FROM PLAYERS P 
WHERE P.NAME  LIKE '%a';

4.SELECT *
FROM REVIEWS R  
WHERE R.PLAYER_ID LIKE '800';

5.SELECT COUNT(*) 
FROM TOURNAMENTS T 
WHERE T.`YEAR` LIKE 2015;

6.SELECT * 
FROM AWARDS A 
WHERE A.DESCRIPTION LIKE '%facere%';

7.SELECT DISTINCT CV.VIDEOGAME_ID
FROM CATEGORY_VIDEOGAME CV 
WHERE CV.CATEGORY_ID  = 2 OR CV.CATEGORY_ID  = 6;

8.SELECT *
FROM REVIEWS R
WHERE R.RATING >= 2 AND R.RATING <=4;

9.SELECT *
FROM VIDEOGAMES V 
WHERE YEAR (V.RELEASE_DATE) = 2020;

10.SELECT DISTINCT R.VIDEOGAME_ID 
FROM REVIEWS R 
WHERE R.RATING = 5;

11.SELECT COUNT(*) AS review_number, AVG(R.RATING) AS avg_rating
FROM REVIEWS R
WHERE R.VIDEOGAME_ID = 412;

12.SELECT COUNT(*)
FROM VIDEOGAMES V 
WHERE V.SOFTWARE_HOUSE_ID = 1 AND YEAR(V.RELEASE_DATE) = 2018;


#### GROUP BY

1.SELECT SH.COUNTRY, COUNT(*)
FROM SOFTWARE_HOUSES SH
GROUP BY SH.COUNTRY;

2.SELECT R.VIDEOGAME_ID, COUNT(*) AS numero_recensioni
FROM REVIEWS R
GROUP BY R.VIDEOGAME_ID;

3.SELECT PLV.PEGI_LABEL_ID, COUNT(*) AS numero_videogiochi
FROM PEGI_LABEL_VIDEOGAME PLV
GROUP BY PLV.PEGI_LABEL_ID;

4.SELECT YEAR(V.RELEASE_DATE) AS anno, COUNT(*) AS numero_videogiochi
FROM VIDEOGAMES V
GROUP BY YEAR(V.RELEASE_DATE);

5.SELECT DV.DEVICE_ID, COUNT(*) AS numero_videogiochi_disponibili
FROM DEVICE_VIDEOGAME DV
GROUP BY DV.DEVICE_ID;

6.SELECT R.VIDEOGAME_ID, AVG(R.RATING) AS media_recensioni
FROM REVIEWS R
GROUP BY R.VIDEOGAME_ID
ORDER BY media_recensioni DESC;


#### JOIN

1.SELECT DISTINCT P.*
FROM PLAYERS P
	JOIN REVIEWS R 
		ON P.ID = R.PLAYER_ID;

2.SELECT DISTINCT V.*
FROM VIDEOGAMES V 
	JOIN TOURNAMENT_VIDEOGAME TV 
		ON V.ID = TV.VIDEOGAME_ID
	JOIN TOURNAMENTS T
		ON TV.TOURNAMENT_ID = T.ID
WHERE T.`year` `  = 2016;

3.SELECT V.ID  AS Videogame,  C.Name AS Categoria
FROM VIDEOGAMES V
	JOIN CATEGORY_VIDEOGAME CV 
		ON V.ID = CV.VIDEOGAME_ID
	JOIN CATEGORIES C 
		ON CV.CATEGORY_ID = C.ID;

4.SELECT DISTINCT SH.*
FROM SOFTWARE_HOUSES SH
	JOIN VIDEOGAMES V 
		ON SH.ID = V.SOFTWARE_HOUSE_ID
WHERE YEAR(V.RELEASE_DATE) > 2020;

5.SELECT SH.Name AS SoftwareHouseName, AV.ID as Premio
FROM SOFTWARE_HOUSES SH
	JOIN VIDEOGAMES V 
		ON SH.ID = V.SOFTWARE_HOUSE_ID
	JOIN AWARD_VIDEOGAME AV 
		ON V.ID = AV.VIDEOGAME_ID ;

6.SELECT CV.CATEGORY_ID, PLV.PEGI_LABEL_ID
FROM CATEGORY_VIDEOGAME CV
	JOIN VIDEOGAMES V 
		ON CV.VIDEOGAME_ID = V.ID
	JOIN PEGI_LABEL_VIDEOGAME PLV 
		ON V.ID = PLV.VIDEOGAME_ID
WHERE V.ID IN (
  SELECT DISTINCT R.VIDEOGAME_ID
  FROM REVIEWS R
  WHERE R.RATING >= 4
);

7.SELECT DISTINCT V.ID AS VideoGameID, V.Name AS VideoGameName
FROM VIDEOGAMES V
	JOIN TOURNAMENT_VIDEOGAME TV 
		ON V.ID = TV.VIDEOGAME_ID
	JOIN TOURNAMENTS T 
		ON TV.TOURNAMENT_ID = T.ID
	JOIN PLAYER_TOURNAMENT PT  
		ON T.ID = PT.TOURNAMENT_ID
	JOIN PLAYERS P 
		ON PT.PLAYER_ID = P.ID
WHERE P.NAME  LIKE 'S%';

8.SELECT DISTINCT T.City
FROM TOURNAMENTS T
	JOIN TOURNAMENT_VIDEOGAME TV 
		ON T.ID = TV.TOURNAMENT_ID
	JOIN AWARD_VIDEOGAME AV 
		ON TV.VIDEOGAME_ID = AV.VIDEOGAME_ID
	JOIN AWARDS A 
		ON AV.AWARD_ID = A.ID
WHERE AV.`year`  = 2018
  AND A.NAME = 'Gioco dell\'Anno';

9.SELECT P.NAME 
FROM PLAYERS P
	JOIN PLAYER_TOURNAMENT PT  
		ON P.ID = PT.PLAYER_ID 
	JOIN TOURNAMENTS T 
		ON PT.TOURNAMENT_ID = T.ID
	JOIN TOURNAMENT_VIDEOGAME TV 
		ON T.ID = TV.TOURNAMENT_ID
	JOIN VIDEOGAMES V 
		ON TV.VIDEOGAME_ID = V.ID
	JOIN AWARD_VIDEOGAME AV 
		ON V.ID = AV.VIDEOGAME_ID
	JOIN AWARDS A 
		ON AV.AWARD_ID = A.ID
WHERE T.`year`  = 2019
  AND A.NAME = 'Gioco pi√π atteso'
  AND YEAR(V.RELEASE_DATE) = 2018;

10.SELECT SH.*, V.*
FROM SOFTWARE_HOUSES SH
	JOIN VIDEOGAMES V 
		ON SH.ID = V.SOFTWARE_HOUSE_ID
ORDER BY V.RELEASE_DATE 
LIMIT 1;

11.SELECT V.ID, V.Name, V.Release_Date, COUNT(R.ID) AS Totale_recensioni
FROM VIDEOGAMES V
	JOIN REVIEWS R 
		ON V.ID = R.VIDEOGAME_ID
GROUP BY V.ID, V.Name, V.Release_Date
ORDER BY Totale_recensioni DESC
LIMIT 1;

12.SELECT SH.ID AS SoftwareHouseID, SH.Name AS SoftwareHouseName, COUNT(*) AS Totale_premi
FROM VIDEOGAMES V
	JOIN AWARD_VIDEOGAME AV 
		ON V.ID = AV.VIDEOGAME_ID
	JOIN AWARDS A 
		ON AV.AWARD_ID = A.ID
	JOIN SOFTWARE_HOUSES SH 
		ON V.SOFTWARE_HOUSE_ID = SH.ID
WHERE AV.`year` BETWEEN 2015 AND 2016
GROUP BY SH.ID, SH.NAME 
ORDER BY Totale_premi DESC
LIMIT 1;

13.SELECT DISTINCT C.NAME A
FROM CATEGORIES C
	JOIN CATEGORY_VIDEOGAME CV 
		ON C.ID = CV.CATEGORY_ID
WHERE CV.VIDEOGAME_ID IN (
  SELECT V.ID
  FROM VIDEOGAMES V
  	JOIN REVIEWS R 
  		ON V.ID = R.VIDEOGAME_ID
  GROUP BY V.ID
  HAVING AVG(R.Rating) < 2
);
